% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/derive-traits.R
\name{derive_traits_}
\alias{derive_traits_}
\title{Calculate Derived Traits from Tidy Data}
\usage{
derive_traits_(tbl, data_type, trait_fns = NULL, mp_fns = NULL)
}
\arguments{
\item{tbl}{A tibble in tidy format, with the following columns:
\itemize{
\item \code{sample}: sample ID
\item \code{glycan_structure}: glycan structures, either a \code{glyrepr::glycan_structure()} vector
or a character vector of glycan structure strings supported by \code{glyparse::auto_parse()}.
\item \code{value}: the quantification of the glycan in the sample.
}

For glycoproteomics data, additional columns are needed:
\itemize{
\item \code{protein}: protein ID
\item \code{protein_site}: the glycosite position on the protein
The unique combination of \code{protein} and \code{protein_site} determines a glycosite.
}

Other columns are ignored.

Please make sure that the data has been properly preprocessed,
including normalization, missing value handling, etc.
Specifically, for glycoproteomics data, please make sure that the data has been aggregated to the
"glycoforms with structures" level.
That is the quantification of each glycan structure on each glycosite in each sample.}

\item{data_type}{Either "glycomics" or "glycoproteomics".}

\item{trait_fns}{A named list of derived trait functions created by trait factories.
Names of the list are the names of the derived traits.
Default is \code{NULL}, which means all derived traits in \code{\link[=basic_traits]{basic_traits()}} are calculated.}

\item{mp_fns}{A named list of meta-property functions.
This parameter is useful if your trait functions use custom meta-properties
other than those in \code{\link[=all_mp_fns]{all_mp_fns()}}.
Default is \code{NULL}, which means all meta-properties in \code{\link[=all_mp_fns]{all_mp_fns()}} are used.}
}
\value{
A tidy tibble containing the following columns:
\itemize{
\item \code{sample}: sample ID
\item \code{trait}: derived trait name
\item \code{value}: the value of the derived trait
}

For glycoproteomics data, with additional columns:
\itemize{
\item \code{protein}: protein ID
\item \code{protein_site}: the glycosite position on the protein
}

Other columns in the original tibble are not included.
}
\description{
This function calculates derived traits from glycomic or glycoproteomic profiles
in tidy format. For glycomics data, it calculates the derived traits directly.
For glycoproteomics data, each glycosite is treated as a separate glycome,
and derived traits are calculated in a site-specific manner.

This function calculates derived traits from a tibble in tidy format.
Use this function if you are not using the \code{glyexp} package.
}
\examples{
# Create example tidy data
library(dplyr)
tidy_data <- tibble(
  sample = rep(c("S1", "S2"), each = 3),
  glycan_structure = rep(c("Man5", "Man6", "Man7"), 2),
  value = c(0.2, 0.3, 0.5, 0.1, 0.4, 0.5)
)

# Calculate traits
traits <- derive_traits_(tidy_data, data_type = "glycomics")
traits

}
\seealso{
\code{\link[=derive_traits]{derive_traits()}}, \code{\link[=basic_traits]{basic_traits()}}, \code{\link[=all_traits]{all_traits()}}
}
